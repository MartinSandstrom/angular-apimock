/*! Angular API Mock v0.1.3
 * Licensed with MIT
 * Made with â™¥ from Seriema + Redhorn */
angular.module("apiMock",[]).config(["$httpProvider",function(a){a.interceptors.push("httpInterceptor")}]).provider("apiMock",function(){function a(a){switch(typeof a){case"undefined":return void 0;case"number":return a?a:!1;default:return!!a}}function b(a){var b={status:a.apiMock,headers:{"Content-Type":"text/html; charset=utf-8",Server:"Angular ApiMock"}};return f.reject(b)}function c(a){var b=a.url.substring(j.apiPath.length);a.url=j.mockDataPath+b;var c=/[a-zA-z0-9/.\-]*/;return a.url=c.exec(a.url)[0],"/"===a.url[a.url.length-1]&&(a.url=a.url.slice(0,-1)),a.url+="."+a.method.toLowerCase()+".json",a}function d(a,b){e=a,f=b}var e,f,g="/mock_data",h="/api",i=d.prototype;i.shouldMock=function(a){var b=this._isLocalMock(a);return void 0===b&&(b=!!this._isGlobalMock()),!(!b||!this._isApiPath(a))},i.doMock=function(a){return a&&"number"==typeof a.apiMock?b(a):c(a)},i._isApiPath=function(a){return a&&0===a.url.indexOf(j.apiPath)},i._isLocalMock=function(b){return b&&a(b.apiMock)},i._isGlobalMock=function(){var b,c=/apimock/i;return angular.forEach(e.search(),function(d,e){c.test(e)&&(b=a(d))}),b};var j={mockDataPath:g,apiPath:h};this.config=function(a){angular.extend(j,a)},this.$get=["$location","$q",function(a,b){return new d(a,b)}]}).service("httpInterceptor",["$q","apiMock",function(a,b){this.request=function(c){return c&&b.shouldMock(c)&&(c=b.doMock(c)),c||a.when(c)}}]);