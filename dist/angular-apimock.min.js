/*! Angular API Mock v0.1.0
 * Licensed with MIT
 * Made with â™¥ from Seriema + Redhorn */
angular.module("apiMock",[]).config(["$httpProvider",function(a){a.interceptors.push("httpInterceptor")}]).provider("apiMock",function(){function a(a){b=a}var b,c="/mock_data",d="/api",e=a.prototype;e.shouldMock=function(a){return(this._isGlobalMock()||this._isLocalMock(a))&&this._isApiPath(a)},e.doMock=function(a){var b=a.url.substring(f.apiPath.length);a.url=f.mockDataPath+b;var c=/[a-zA-z0-9/.\-]*/;a.url=c.exec(a.url)[0],"/"===a.url[a.url.length-1]&&(a.url=a.url.slice(0,-1)),a.url+="."+a.method.toLowerCase()+".json"},e._isApiPath=function(a){return 0===a.url.indexOf(f.apiPath)},e._isLocalMock=function(a){return!!a.apiMock},e._isGlobalMock=function(){var a=/apimock/i,c=!1;return angular.forEach(b.search(),function(d,e){a.test(e)&&(d===!0||"true"===angular.lowercase(d))&&(c=!0,b.search(e,null),b.search("apimock",!0))}),c};var f={mockDataPath:c,apiPath:d};this.config=function(a){angular.extend(f,a)},this.$get=["$location",function(b){return new a(b)}]}).service("httpInterceptor",["$q","apiMock",function(a,b){this.request=function(c){return c&&b.shouldMock(c)&&b.doMock(c),c||a.when(c)}}]);