/*! Angular API Mock v0.1.0
 * Licensed with MIT
 * Made with â™¥ from Seriema + Redhorn */
angular.module("apiMock",[]).config(["$httpProvider",function(a){a.interceptors.push("httpInterceptor")}]).provider("apiMock",function(){function a(a){return 0===a.url.indexOf(k.apiPath)}function b(a){return!!a.apiMock}function c(){var a=/apimock/i,b=!1;return angular.forEach(g.search(),function(c,d){a.test(d)&&(c===!0||"true"===angular.lowercase(c))&&(b=!0,g.search(d,null),g.search("apimock",!0))}),b}function d(a){var b=a.url.substring(k.apiPath.length);a.url=k.mockDataPath+b+"."+a.method.toLowerCase()+".json"}function e(a){return(this._isGlobalMock()||this._isLocalMock(a))&&this._isApiPath(a)}function f(a){g=a}var g,h="/mock_data",i="/api",j=f.prototype;j.shouldMock=e,j.doMock=d,j._isApiPath=a,j._isLocalMock=b,j._isGlobalMock=c;var k={mockDataPath:h,apiPath:i};this.config=function(a){angular.extend(k,a)},this.$get=["$location",function(a){return new f(a)}]}).service("httpInterceptor",["$q","apiMock",function(a,b){this.request=function(c){return c&&b.shouldMock(c)&&b.doMock(c),c||a.when(c)}}]);