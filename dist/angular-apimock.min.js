/*! Angular API Mock v0.1.0
 * Licensed with MIT
 * Made with â™¥ from Seriema + Redhorn */
angular.module("apiMock",[]).provider("apiMockDefaultImpl",function(){function a(a){return 0===a.url.indexOf(this.apiPath)}function b(a){return!!a.apiMock}function c(){var a=/apimock/i,b=!1;return angular.forEach(g.search(),function(c,d){a.test(d)&&(c===!0||"true"===angular.lowercase(c))&&(b=!0,g.search(d,null),g.search("apimock",!0))}),b}function d(a){var b=a.url.substring(j.apiPath.length);a.url=j.mockDataPath+b+"."+a.method.toLowerCase()+".json"}function e(a){return(j.isGlobalMock()||j.isLocalMock(a))&&j.isApiPath(a)}function f(a){angular.extend(this,j),g=a}var g,h="/mock_data",i="/api",j={mockDataPath:h,apiPath:i,isApiPath:a,isLocalMock:b,isGlobalMock:c,reroutePath:d};this.shouldMock=e,this.doMock=j.reroutePath,this.config=function(a){angular.extend(j,a)},this.$get=["$location",function(a){return new f(a)}]}).provider("apiMock",function(){function a(){angular.extend(this,b)}var b={shouldMock:null,doMock:null};this.config=function(a){angular.extend(b,a)},this.$get=function(){return new a}}).service("httpInterceptor",["$q","apiMock",function(a,b){this.request=function(c){return c&&b.shouldMock(c)&&b.doMock(c),c||a.when(c)}}]).config(["$httpProvider","apiMockProvider","apiMockDefaultImplProvider",function(a,b,c){a.interceptors.push("httpInterceptor"),b.config({shouldMock:c.shouldMock,doMock:c.doMock})}]);