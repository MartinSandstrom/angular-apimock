/*! Angular API Mock v0.1.8
 * Licensed with MIT
 * Made with â™¥ from Seriema + Redhorn */
angular.module("apiMock",[]).config(["$httpProvider",function(a){a.interceptors.push("httpInterceptor")}]).provider("apiMock",function(){function a(a){var b=[];return a=c(a),angular.forEach(a,function(a,c){var d=encodeURIComponent(a);b.push(encodeURIComponent(c)+"="+d)}),b.join("&")}function b(a){var b=a.split("?")[1],c=[];b&&(c=b.split("&"));var d={};return c.forEach(function(a){a=a.split("="),d[a[0]]=decodeURIComponent(a[1]||"")}),JSON.parse(JSON.stringify(d))}function c(a){var b,c={},d=[];for(b in a)a.hasOwnProperty(b)&&d.push(b);for(d.sort(),b=0;b<d.length;b++)c[d[b]]=a[d[b]];return c}function d(a){var b,c=/apimock/i;return angular.forEach(a,function(a,d){c.test(d)&&(b=a)}),b}function e(a){return d(a)}function f(a){var b=e(a);return void 0===b&&(b=h()),b}function g(a){switch(typeof a){case"number":if(0!==a&&!isNaN(a))return{type:"respond",value:a};break;case"string":switch(a.toLowerCase()){case"auto":return{type:"recover"};case"true":return{type:"reroute"}}break;case"boolean":if(a===!0)return{type:"reroute"}}return{type:"ignore"}}function h(){return d(o.search())}function i(a){var b={status:a,headers:{"Content-Type":"text/html; charset=utf-8",Server:"Angular ApiMock"}};return p.info("apiMock: mocking HTTP status to "+a),q.reject(b)}function j(a){return 0===a.indexOf(r.apiPath)}function k(a){j(a.url)&&s.push(a)}function l(a){var b=!1;return angular.forEach(s,function(c,d){c.method===a.method&&c.url===a.url&&(b=!0,s.splice(d,1))}),b}function m(c){var d;if(!j(c.url))return c;var e=c.url,f=c.url.substring(r.apiPath.length);if(f=r.mockDataPath+f,r.stripQueries)d=/[a-zA-z0-9/.\-]*/,f=d.exec(f)[0];else{var g=new b(f);c.params="object"==typeof c.params?c.params:{},d=/[a-zA-z0-9/.\-]*/,f=d.exec(f)[0],"object"==typeof g&&(c.params=angular.extend(c.params,g)),"/"!==f.substring(f.length-1)&&(f+="/"),f+=a(c.params)}return c.params=void 0,"/"===f[f.length-1]&&(f=f.slice(0,-1)),f+="."+c.method.toLowerCase()+".json",c.method="GET",c.url=f,p.info("apiMock: rerouting "+e+" to "+f),c}function n(a,b,c){o=a,p=b,q=c}var o,p,q,r={mockDataPath:"/mock_data",apiPath:"/api",disable:!1,stripQueries:!0},s=[],t=n.prototype;t._countFallbacks=function(){return s.length},t.onRequest=function(a){if(r.disable)return a;var b=f(a),c=g(b);switch(c.type){case"reroute":return m(a);case"recover":return k(a),a;case"respond":return i(c.value);case"ignore":return a;default:return a}},t.onResponse=function(a){return r.disable?a:(l(a),a)},t.recover=function(a){return r.disable?!1:void 0===a.config?!1:l(a.config)?(p.info("apiMock: recovering from failure at "+a.config.url),m(a.config)):!1},this.config=function(a){angular.extend(r,a)},this.$get=["$location","$log","$q",function(a,b,c){return new n(a,b,c)}]}).service("httpInterceptor",["$injector","$q","apiMock",function(a,b,c){this.request=function(a){return a=c.onRequest(a),a||b.when(a)},this.response=function(a){return a=c.onResponse(a),a||b.when(a)},this.responseError=function(d){var e=c.recover(d);if(e){var f=a.get("$http");return f(e)}return b.reject(d)}}]);